# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.1-node-browsers
         environment:
           RAILS_ENV: test
           CI_DB_HOST: 127.0.0.1
           CI_DB_NAME: Feedbackapp_test
           CI_DB_USERNAME: root
           CI_DB_PASSWORD: root
           TAG: $CIRCLE_BRANCH-$CIRCLE_SHA1
       - image: circleci/postgres:9.6.2-alpine
         environment:
           - POSTGRES_USER: root
           - POSTGRES_DB: Feedbackapp_test
           - POSTGRES_ROOT_PASSWORD: root

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        
       # Run Rubocop
      # - run: if [ $CIRCLE_NODE_INDEX = 0 ] && [ -f .rubocop.yml ]; then bundle exec rubocop; fi

       # Install redis and run it
      - run: sudo apt-get update && sudo apt-get install -y redis-server
      - run: sudo redis-server --daemonize yes

      # Database setup
      - run: bundle exec rake db:create

      # Run Migration in Test
      - run: bin/rails db:migrate RAILS_ENV=test

      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)"
            
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results